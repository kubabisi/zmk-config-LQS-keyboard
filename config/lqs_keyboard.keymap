/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_pl_programmers.h"
#include "keys_colemak.h"
#include <behaviors/rgbled_widget.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

// key numbering
//  +-------------------+           +-------------------+
//  | 0  1  2  3  4  5  |           | 6  7  8  9  10 11 |
//  | 12 13 14 15 16 17 |           | 18 19 20 21 22 23 |
//  | 24 25 26 27 28 29 +--+     +--+ 30 31 32 33 34 35 |
//  | 36 37 38 39 40 41 42 |     | 43 44 45 46 47 48 49 |
//  +--------+ 50 51 52 53 |     | 54 55 56 57 +--------+
//           +-------------+     +-------------+

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 44 45 46 47 48 49
#define THUMB_L 50 51 52 53 42
#define THUMB_R 54 55 56 57 43

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_R THUMB_L THUMB_R>;
            hold-trigger-on-release;
            label = "Home row mod left";
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_L THUMB_L THUMB_R>;
            hold-trigger-on-release;
            label = "Home row mod right";
        };

        hmla: hmla {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&acute>;

            hold-trigger-key-positions = <KEYS_R THUMB_L THUMB_R>;
            hold-trigger-on-release;
            label = "Home row mod left acute";
        };

        hmra: hmra {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&acute>;

            hold-trigger-key-positions = <KEYS_L THUMB_L THUMB_R>;
            hold-trigger-on-release;
            label = "Home row mod right acute";
        };

        hmlo: hmlo {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&ogonek>;

            hold-trigger-key-positions = <KEYS_R THUMB_L THUMB_R>;
            hold-trigger-on-release;
            label = "Home row mod left ogonek";
        };

        hmro: hmro {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&ogonek>;

            hold-trigger-key-positions = <KEYS_L THUMB_L THUMB_R>;
            hold-trigger-on-release;
            label = "Home row mod right ogonek";
        };

        hmlu: hmlu {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&umlaut>;

            hold-trigger-key-positions = <KEYS_R THUMB_L THUMB_R>;
            hold-trigger-on-release;
            label = "Home row mod left umlaut";
        };

        hmru: hmru {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&umlaut>;

            hold-trigger-key-positions = <KEYS_L THUMB_L THUMB_R>;
            hold-trigger-on-release;
            label = "Home row mod right umlaut";
        };
    };

    macros {
        ogonek: col_ogon {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&kp RA(COL_G) &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "OGONEK";
        };

        acute: acute {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&kp RA(COL_T) &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "ACUTE";
        };

        dot: dot {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&kp RA(DOT) &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "DOT";
        };

        umlaut: umlaut {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&kp RA(COL_D) &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "UMLAUT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_col {
            bindings = <
&kp ESC           &kp N1           &kp N2           &kp N3            &kp N4             &kp N5                               &kp N6     &kp N7             &kp N8            &kp N9           &kp N0           &trans
&kp TAB           &kp COL_Q        &kp COL_W        &kp COL_F         &kp COL_P          &kp COL_B                            &kp COL_J  &kp COL_L          &kp COL_U         &kp COL_Y        &kp COL_SEMI     &kp MINUS
&kp LEFT_SHIFT    &hml LGUI COL_A  &hml LALT COL_R  &hml LCTRL COL_S  &hml LSHIFT COL_T  &kp COL_G                            &kp COL_M  &hmr RSHIFT COL_N  &hmr RCTRL COL_E  &hmr LALT COL_I  &hmr RGUI COL_O  &kp RSHIFT
&kp LEFT_CONTROL  &kp COL_Z        &kp COL_X        &kp COL_C         &kp COL_D          &kp COL_V  &trans     &trans         &kp COL_K  &kp COL_H          &kp COL_COMMA     &kp COL_DOT      &kp COL_FSLH     &kp RIGHT_CONTROL
                                                    &trans            &mo 5              &kp SPACE  &kp DEL    &kp BACKSPACE  &kp ENTER  &mo 3              &mo 6
            >;
        };

        base_qwe {
            bindings = <
&kp ESC           &kp N1          &kp N2          &kp N3           &kp N4            &kp N5                      &kp N6    &kp N7            &kp N8           &kp N9          &kp N0          &trans
&kp TAB           &kp PL_Q        &kp PL_W        &kp PL_F         &kp PL_P          &kp PL_B                    &kp PL_J  &kp PL_L          &kp PL_U         &kp PL_Y        &kp PL_SEMI     &kp MINUS
&kp LEFT_SHIFT    &hml LGUI PL_A  &hml LALT PL_R  &hml LCTRL PL_S  &hml LSHIFT PL_T  &kp PL_G                    &kp PL_M  &hmr RSHIFT PL_N  &hmr RCTRL PL_E  &hmr LALT PL_I  &hmr RGUI PL_O  &kp RSHIFT
&kp LEFT_CONTROL  &kp PL_Z        &kp PL_X        &kp PL_C         &kp PL_D          &kp PL_V  &trans    &trans  &kp PL_K  &kp PL_H          &kp PL_COMMA     &kp PL_DOT      &kp PL_FSLH     &kp RIGHT_CONTROL
                                                  &trans           &trans            &trans    &trans    &trans  &trans    &kp RALT          &trans
            >;
        };

        raw_qwerty {
            bindings = <
&kp ESC     &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                    &kp N6  &kp N7    &kp N8     &kp N9   &kp N0    &trans
&kp TAB     &kp Q   &kp W   &kp E   &kp R   &kp T                     &kp Y   &kp U     &kp I      &kp O    &kp P     &trans
&kp LSHIFT  &kp A   &kp S   &kp D   &kp F   &kp G                     &kp H   &kp J     &kp K      &kp L    &kp SEMI  &kp RSHIFT
&kp LCTRL   &kp Z   &kp X   &kp C   &kp V   &kp B   &trans    &trans  &kp N   &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RCTRL
                            &trans  &trans  &trans  &trans    &trans  &trans  &kp RALT  &trans
            >;
        };

        dia_col {
            bindings = <
&trans  &trans            &trans              &trans             &trans         &trans                    &trans  &trans              &trans             &trans            &trans            &trans
&trans  &trans            &trans              &trans             &trans         &trans                    &trans  &kp RA(COL_L)       &umlaut COL_U      &trans            &trans            &trans
&trans  &hmlo LGUI COL_A  &hmlu LALT COL_A    &hmla LCTRL COL_S  &kp RA(COL_S)  &trans                    &trans  &hmra RSHIFT COL_N  &hmro RCTRL COL_E  &hmru LALT COL_O  &hmra RGUI COL_O  &trans
&trans  &dot COL_Z        &acute COL_Z        &acute COL_C       &trans         &trans  &trans    &trans  &trans  &trans              &trans             &trans            &trans            &trans
                                              &trans             &trans         &trans  &trans    &trans  &trans  &trans              &trans
            >;
        };
        
        sym {
            bindings = <
&trans  &trans     &trans       &trans       &trans             &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &kp PL_LBKT  &kp PL_RBKT  &kp PL_DQT         &kp PL_MINUS                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp PL_GT  &kp PL_LPAR  &kp PL_RPAR  &kp PL_UNDERSCORE  &kp PL_EQUAL                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LT     &kp PL_LBRC  &kp PL_RBRC  &kp PL_APOS        &kp PL_PLUS   &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                &trans       &trans             &trans        &trans    &trans  &trans  &trans  &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans    &trans    &trans     &trans      &trans                    &trans  &trans          &trans          &trans        &trans           &trans
&trans  &trans    &trans    &trans     &trans      &trans                    &trans  &kp HOME        &kp PG_DN       &kp PG_UP     &kp END          &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHIFT  &trans                    &trans  &kp LEFT        &kp DOWN        &kp UP        &kp RIGHT        &trans
&trans  &trans    &mkp MB3  &mkp MB2   &mkp MB1    &trans  &trans    &trans  &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
                            &trans     &trans      &trans  &trans    &trans  &trans  &trans          &trans
            >;
        };

        conf {
            bindings = <
&bt BT_CLR   &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4                    &trans  &trans  &trans  &trans  &trans  &trans
&trans       &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                     &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans         &trans         &tog 2         &tog 1         &trans                           &trans  &trans  &trans  &trans  &trans  &trans
&bootloader  &trans         &trans         &out OUT_USB   &out OUT_USB   &out OUT_TOG   &trans    &trans  &trans  &trans  &trans  &trans  &trans  &bootloader
                                           &trans         &trans         &trans         &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
